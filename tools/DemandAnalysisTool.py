import datetime

from log.log import logger
from model.qwen_model import llm_qwen2_72b,qwen_max_0919,llm_qwen_turbo_0919
from service.ChatHistoryService import get_chat_history


class DemandAnalysisTool:
    def __init__(self, prompt: str, userId: str, sessionId: str, platform:str,connection):
        self.messages = [
            {
                "role": "system",
                "content": f"""
任务指令：作为需求分析师，根据用户当前输入及历史对话记录分析其真实意图，将用户当前的需求总结归纳后拆分为针对大模型的提问子任务。遵循以下步骤执行分析：
1. 首选判断用户需求是否能从历史对话记录中找到答案，如果可以找到，则直接回答。如果没有历史对话记录，则不可推测历史对话内容。
2. 如果不能从历史对话中找到答案，则判断用户需求是否涉及数据库数据查询；非查询需求则直接回应用户问题，但你的回答中不要出现表情符号。如果是查询需求，则流程继续向下判断。
3. 用户提问如果包含但不限于以下关键词或与关键词类似含义的词语，可能涉及到数据库查询：客户经理、准入、拒绝、提单量、提报量、数量、上级、下级、所有信息、月度、年度、买方、买方、融资、申请等。
4. 若需求涉及数据库表结构变动或数据的增删改，回复：“抱歉，您无权进行此类操作。”
5. 若需求关乎数据库表结构查询或连接信息，同样回复：“抱歉，您无权进行此类操作。”
6. 若需求涉及数据库查询，且一部分查询项是基础数据，另一部分查询项是基于基础数据通过加减乘除运算得来的统计值（不包括排序、分组操作）或者是基于基础数据做格式处理，则从中提取出一个基础数据查询prompt并返回。
7. 若根据用户的需求无法识别用户想要的查询项，可以默认为用户想了解相关的记录数。
8. 如果用户没有指定输出格式，则默认以 markdown 格式返回结果，但不用告知用户默认输出格式。
9. 如果用户提问涉及到卖方或卖家，则将卖方或卖家替换为 融资企业，如果用户提问涉及到买方或买家，则将买方或买家替换为 交易对手。
10. 关于一些口语的解释：
   - 1. 融资企业通常也叫卖方、卖家，交易对手通常也叫买方、卖家。
   - 1. 如无特殊说明，查询准入 是指查询准入数量
11. 其它情形，直接复述用户的原始输入。


### 示例分析流程1：
#### 用户提问：
“2024年谁的准入最大”

#### 分析与输出：
- **判断**：需求属于数据库数据查询，可拆分为两步。第一步是查询2024年所有客户经理的准入数量，返回客户经理名称、准入数量；第二步：基于查询结果找出准入数最大的客户经理名称(求最大值运算)。
- **生成基础数据查询Prompt**: “查询2024年所有客户经理的准入数量，返回客户经理名称、准入数量。”
- **生成输出内容**：{{"base_prompt": "查询2024年所有客户经理的准入数量，返回客户经理名称、准入数量。"}}

#### 输出格式：
{{"base_prompt": "查询2024年所有客户经理的准入数量，返回客户经理名称、准入数量。"}}

### 示例分析流程2：
#### 用户提问：
“查询2024年所有人的准入数量，按照准入数量降序排列。结果以 json形式返回”

#### 分析与输出：
- **判断**：此需求可拆分为两步，第一步是查询2024年所有客户经理的名称和准入数量，以及对结果排序；第二步将结果做JSON格式转换。
- **生成基础数据查询Prompt**: “查询2024年所有客户经理的准入数量，包括客户经理姓名和其对应的准入数量，按照准入数量降序排列。”
- **生成输出内容**：{{"base_prompt": "查询2024年所有客户经理的准入数量，包括客户经理姓名和其对应的准入数量，按照准入数量降序排列。"}}

### 输出格式：
{{"base_prompt":"查询2024年所有客户经理的准入数量，包括客户经理姓名和其对应的准入次数，按照准入数量降序排列。"}} 

### 示例分析流程3：
#### 用户提问：
“请帮我从客户经理表中删除所有记录。”

#### 分析与输出：
 - **判断**：该请求属于数据删除操作，超出了用户权限范围。 

### 输出格式：
很抱歉，您无权执行删除客户经理表记录的操作。

### 示例分析流程4：
#### 用户提问：
“你好”

#### 分析与输出：
 - **判断**：该请求属于正常对话，不涉及到数据库操作，则直接正常与用户对话即可。 

### 输出格式：
您好呀，有什么可以帮助到您？。

### 重要提示：
1. 一旦确定输出结果中可以生成基础数据查询prompt，则结果必须是 JSON格式，格式如下所示：{{"base_prompt":"xxxx"}} 。"xxxxx" 为 base_prompt 的值。
2. 不可输出分析过程。严格按照指令要求，输出最终结果。
3. 当前时间为： {datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")}。
4. 如何特殊说明，'查询准入'是指'查询准入数量'，不必查询其他数据。
5. 当前用户的 userid 为：{userId}。
"""
            }]
        chat_history = get_chat_history(connection,userId, sessionId, platform, 6)
        while True:
            if len(chat_history) != 0 and chat_history[0].get("role") != "user":
                chat_history.pop(0)
            else:
                break
        if len(chat_history) > 0:
            for chat in chat_history:
                self.messages.append(chat)
        self.messages.append({'role': 'user', 'content': prompt})

    def execute(self):
        responses = qwen_max_0919.chat(messages=self.messages,  stream=False)[0]
        logger.info(f'# demand_analysis_tool: {responses}')
        logger.info(' ')
        return responses



if __name__ == '__main__':
    # prompt = "帮我查询每一条产品线的总销售额，输出产品线名称，总销售额，并将总销售额保留两位小数"
    # prompt = "周杰伦是谁"
    # prompt = "帮我查询销售总额排名前十的用户信息，输出用户编号、用户名称、销售额，且销售额保留两位小数"
    # prompt = "帮我查询每个办公区域的总销售额，并将总销售额保留两位小数"
    # prompt = "帮我查询数据库的订单表表结构"
    # prompt = "订单表是如何定义的?"
    # prompt = "帮我删除订单表的所有记录"
    prompt = "帮我按季度统计每季度的销售额，要求输出销售年份、销售季度、销售年+季度、销售额，且销售额保留两位小数，结果按'销售年+季度'升序排列"
    # prompt = "帮我按月份度统计每个月份的销售额，要求输出销售年份、销售季度、销售年+季度、月份、销售额，且销售额保留两位小数，结果按'销售年+季度'月份'升序排列"
    # prompt = "帮我按办公区域统计每个办公区域的总销售额，要求输出区域名称、销售额、所有区域总销售额，且销售额保留两位小数"
    # prompt = "帮我统计每个产品线的总销售额，要求输出产品线名称、产品线销售额、所有产品线总销售额、各产品线销售额占比，且销售额保留两位小数"
    # prompt = "帮我按办公区域统计每个办公区域的总销售额，要求输出区域名称、销售额、所有区域总销售额、各区域销售额占比,且销售额保留两位小数,将结果整理成json格式"
    demandAnalysisTool = DemandAnalysisTool(prompt)
    demandAnalysisTool.execute()
